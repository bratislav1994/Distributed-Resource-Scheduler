<Window x:Class="KLRESClient.Window"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:KLRESClient"
        mc:Ignorable="d"
        Title="Project" WindowStartupLocation="CenterScreen" ResizeMode="NoResize" WindowStyle="None" Height="400" Width="900">

    <Window.Resources>
        <Style BasedOn="{StaticResource {x:Type TextBlock}}"
       TargetType="TextBlock"
       x:Key="TitleText">
            <Setter Property="FontSize" Value="40"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Offset="0.0" Color="#90DDDD" />
                            <GradientStop Offset="1.0" Color="#5BFFFF" />
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>

        <Color x:Key="WindowBackgroundColor">#FF2D2D30</Color>
        <Color x:Key="HighlightColor">#EB2F2F</Color>
        <Color x:Key="BlueColor">#7C0000</Color>
        <Color x:Key="ForegroundColor">#222222</Color>

        <SolidColorBrush x:Key="WindowBackgroundColorBrush" Color="{StaticResource WindowBackgroundColor}"/>
        <SolidColorBrush x:Key="HighlightColorBrush" Color="{StaticResource HighlightColor}"/>
        <SolidColorBrush x:Key="BlueColorBrush" Color="{StaticResource BlueColor}"/>
        <SolidColorBrush x:Key="ForegroundColorBrush" Color="{StaticResource ForegroundColor}"/>

        <Style x:Key="WindowButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="contentPresenter"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                          Margin="{TemplateBinding Padding}"
                          RecognizesAccessKey="True" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource HighlightColorBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource BlueColorBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="contentPresenter" Property="Opacity" Value=".5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Grid Background="#FF526B87">

        <DataGrid x:Name="dataGridGenerators" SelectedItem="{Binding EditRemoveWindowVM.SelectedItem}" ItemsSource="{Binding Client.Generators,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" CanUserAddRows="false" AutoGenerateColumns="False" Margin="5,60,5,20">

            <DataGrid.Columns>
                <DataGridTextColumn Header="mrID" Binding="{Binding MRID}"/>
                <DataGridTextColumn Header="name" Binding="{Binding Name}"/>
                <DataGridTextColumn Header="activePower" Binding="{Binding ActivePower}"/>
                <DataGridTextColumn Header="basePoint" Binding="{Binding BasePoint}"/>
                <DataGridTextColumn Header="measurment" Binding="{Binding HasMeasurment}"/>
                <DataGridTextColumn Header="pmin" Width="80" Binding="{Binding Pmin}"/>
                <DataGridTextColumn Header="pmax" Width="80" Binding="{Binding Pmax}"/>
                <DataGridTextColumn Header="price" Binding="{Binding Price}"/>
                <DataGridTextColumn Header="generatorType" Binding="{Binding GeneratorType}"/>
                <DataGridTextColumn Header="workingMode" Width="*" Binding="{Binding WorkingMode}"/>
            </DataGrid.Columns>
        </DataGrid>

        <Button x:Name="button1" Command="{Binding AddWindowVM.ClickAddCommand}" Content="Add" HorizontalAlignment="Left" Margin="218,5,0,0" VerticalAlignment="Top" Height="50" Width="60" >
            <Button.Style>
                <Style  TargetType="{x:Type Button}">
                    <Setter Property="Foreground" Value="Blue" />
                    <Setter Property="IsEnabled" Value="True"/>
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#FFADADAD"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button2" Command="{Binding EditRemoveWindowVM.ClickEditCommand}" Content="Edit" HorizontalAlignment="Left" Margin="288,5,0,0" VerticalAlignment="Top" Height="50" Width="60" >
            <Button.Style>
                <Style  TargetType="{x:Type Button}">
                    <Setter Property="Foreground" Value="Blue"/>
                    <Setter Property="IsEnabled" Value="True"/>
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#FFADADAD"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="button3" Command="{Binding EditRemoveWindowVM.RemoveCommand}" Content="Remove" HorizontalAlignment="Left" Margin="358,5,0,0" VerticalAlignment="Top" Height="50" Width="60" >
            <Button.Style>
                <Style  TargetType="{x:Type Button}">
                    <Setter Property="Foreground" Value="Blue"/>
                    <Setter Property="IsEnabled" Value="True"/>
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#FFADADAD"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>


        <TextBlock x:Name="textBlock" Style="{StaticResource TitleText}" HorizontalAlignment="Left" Margin="5,0,0,0" TextWrapping="Wrap" Text="Generators" VerticalAlignment="Top">

        </TextBlock>
        <Button x:Name="button" Command="{Binding ExitCommand}" Content="X" FontSize="20" FontWeight="UltraBold" HorizontalAlignment="Left" Style="{StaticResource ResourceKey=WindowButtonStyle}" Margin="870,0,0,0" Height="30" Width="30" VerticalAlignment="Top"/>

    </Grid>

</Window>
